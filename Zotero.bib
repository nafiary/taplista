@article{bab2-iptables,
	title = {The {Optimization} and {Implementation} of {Iptables} {Rules} {Set} on {Linux}},
	issn = {2168-7161},
	doi = {10.1109/ICISCE.2015.223},
	journal = {IEEE Transactions on Cloud Computing},
	author = {Lei-fei Xuan. and Pei-fei Wu.},
	month = jun,
	year = {2015},
}

@article{bab2-gunicorn,
	title = {Design and {Implementation} of an "{Web API}" for the {Automatic} {Translation} {Colombia's} {Language} {Pairs:} {Spanish-Wayuunaiki} {Case}},
	issn = {2168-7161},
	doi = {10.1109/ColComCon.2013.6564817},
	journal = {IEEE Transactions on Cloud Computing},
	author = {Dayana Iguaran Fernandez. and Jose Molina Atencia. and Ornela Quintero Gamboa. and Oscar Elias Herrera Bedoya.},
	month = jul,
	year = {2013},
}

@misc{noauthor_introduction_nodate,
	title = {An {Introduction} to {HAProxy} and {Load} {Balancing} {Concepts}},
	url = {https://www.digitalocean.com/community/tutorials/an-introduction-to-haproxy-and-load-balancing-concepts},
	abstract = {An introduction to basic load balancing concepts and terminology, using HAProxy, with some examples.},
	urldate = {2017-04-24TZ},
	journal = {DigitalOcean},
	note = {12 Februari 2017}
}

@misc{noauthor_1998_nodate,
	title = {1998 {World} {Cup} {Web} {Site} {Access} {Logs}},
	url = {http://ita.ee.lbl.gov/html/contrib/WorldCup.html},
	urldate = {2017-06-14TZ},
	note = {10 April 2017}
}

@misc{noauthor_docker_nodate,
	title = {Docker {SDK} for {Python} â€” {Docker} {SDK} for {Python} 2.0 documentation},
	url = {https://docker-py.readthedocs.io/en/stable/},
	urldate = {2017-04-24TZ},
	note = {10 Januari 2017}
}

@misc{bab2-flask,
	title = {Welcome {\textbar} {Flask} ({A} {Python} {Microframework})},
	url = {http://flask.pocoo.org/},
	urldate = {2017-04-24TZ},
	note = {29 Mei 2018}
}

@misc{bab2-python,
	title = {Welcome to {Python}.org},
	url = {https://www.python.org/},
	abstract = {The official home of the Python Programming Language},
	urldate = {2017-06-11TZ},
	journal = {Python.org},
	note = {29 Mei 2018}
}

@misc{bab2-mitmproxy,
	title = {Welcome to {Mitmproxy}.org},
	url = {https://mitmproxy.org/},
	abstract = {Mitmproxy is a free and open source interactive HTTPS proxy},
	urldate = {2018-04-11TZ},
	journal = {Mitmproxy.org},
	note = {29 Mei 2018}
}

@misc{bab2-supervisor,
	title = {Supervisor: {A} {Process} {Control} {System}},
	url = {https://http://supervisord.org/},
	abstract = {Mitmproxy is a free and open source interactive HTTPS proxy},
	urldate = {2018-04-11TZ},
	journal = {Supervisor.org},
	note = {29 Mei 2018}
}

@inproceedings{bab2-mysql,
	title = {Design and implementation of a {MySQL} database backup and recovery system},
	doi = {10.1109/WCICA.2014.7053638},
	abstract = {To prevent data loss and damage in MySQL database for a variety of causes, to ensure the normal and efficient operation of information systems and websites based on MySQL databases, this paper takes China Agricultural University website as an example, to explore how to develop reasonable backup and recovery strategies to build a highly available and highly reliable MySQL database backup and recovery system. Based on MySQL master-slave replication technology, this system implements real-time synchronization of data and automatic switching between master and slave database servers, which ensures the high availability of database when master database fails, meanwhile, by using logical backup technology which combines full backup with incremental backup, this system achieves full recovery of data to ensure the high reliability of database when data misuse occurs.},
	booktitle = {Proceeding of the 11th {World} {Congress} on {Intelligent} {Control} and {Automation}},
	author = {Ping, Yu and Hong-Wei, Hu and Nan, Zhou},
	month = jun,
	year = {2014},
	keywords = {Automation, China Agricultural University Web site, Databases, Educational institutions, Intelligent control, Internet, MySQL database backup and recovery system, MySQL master-slave replication technology, MySQL mater-slave replication technology, Reactive power, Reliability, SQL, Structured Query Language, data damage prevention, data handling, data loss prevention, data recovery, data synchronization, database availability, database recovery, database reliability, full backup, incremental backup, information systems, logical backup technology, relational databases},
	pages = {5410--5415}
}

@misc{noauthor_coreos/etcd_nodate,
	title = {coreos/etcd},
	url = {https://github.com/coreos/etcd},
	abstract = {etcd - Distributed reliable key-value store for the most critical data of a distributed system},
	urldate = {2017-04-19TZ},
	journal = {GitHub},
	note = {2 Februari 2017}
}

@article{calheiros_workload_2015,
	title = {Workload {Prediction} {Using} {ARIMA} {Model} and {Its} {Impact} on {Cloud} {Applications} \#x2019; {QoS}},
	volume = {3},
	issn = {2168-7161},
	doi = {10.1109/TCC.2014.2350475},
	abstract = {As companies shift from desktop applications to cloud-based software as a service (SaaS) applications deployed on public clouds, the competition for end-users by cloud providers offering similar services grows. In order to survive in such a competitive market, cloud-based companies must achieve good quality of service (QoS) for their users, or risk losing their customers to competitors. However, meeting the QoS with a cost-effective amount of resources is challenging because workloads experience variation overtime. This problem can be solved with proactive dynamic provisioning of resources, which can estimate the future need of applications in terms of resources and allocate them in advance, releasing them once they are not required. In this paper, we present the realization of a cloud workload prediction module for SaaS providers based on the autoregressive integrated moving average (ARIMA) model. We introduce the prediction based on the ARIMA model and evaluate its accuracy of future workload prediction using real traces of requests to Web servers. We also evaluate the impact of the achieved accuracy in terms of efficiency in resource utilization and QoS. Simulation results show that our model is able to achieve an average accuracy of up to 91 percent, which leads to efficiency in resource utilization with minimal impact on the QoS.},
	number = {4},
	journal = {IEEE Transactions on Cloud Computing},
	author = {Calheiros, R. N. and Masoumi, E. and Ranjan, R. and Buyya, R.},
	month = oct,
	year = {2015},
	keywords = {ARIMA, ARIMA model, Computer architecture, Load modeling, Predictive models, SaaS applications, SaaS providers, Software as a service, Time series analysis, Web server request traces, autoregressive integrated moving average model, autoregressive moving average processes, cloud application QoS, cloud computing, cloud providers, cloud workload prediction module, cloud-based companies, cloud-based software-as-a-service, proactive dynamic resource provisioning, public clouds, quality of service, quality-of-service, resource allocation, resource utilization, virtual machines, workload prediction},
	pages = {449--458}
}

@misc{noauthor_notitle_nodate,
	url = {https://www.researchgate.net/file.PostFileLoader.html?id=576a03d296b7e409185da781&assetKey=AS%3A375617448103938%401466565586533},
	urldate = {2017-06-11TZ}
}

@misc{noauthor_docker_2017,
	title = {Docker {Engine} {API} and {SDKs}},
	url = {https://docs.docker.com/engine/api/},
	urldate = {2017-06-11TZ},
	journal = {Docker Documentation},
	month = jun,
	year = {2017},
	note = {12 Januari 2017}
}

@misc{bab2-docker-registry,
	title = {Docker {Registry}},
	url = {https://docs.docker.com/registry/},
	abstract = {High-level overview of the Registry},
	urldate = {2017-06-11TZ},
	journal = {Docker Documentation},
	month = jun,
	year = {2017},
	note = {29 Mei 2018}
}

@article{bab2-docker-container,
	title = {An introduction to {Docker} for reproducible research, with examples from the {R} environment},
	volume = {49},
	issn = {01635980},
	url = {http://arxiv.org/abs/1410.0846},
	doi = {10.1145/2723872.2723882},
	abstract = {As computational work becomes more and more integral to many aspects of scientific research, computational reproducibility has become an issue of increasing importance to computer systems researchers and domain scientists alike. Though computational reproducibility seems more straight forward than replicating physical experiments, the complex and rapidly changing nature of computer environments makes being able to reproduce and extend such work a serious challenge. In this paper, I explore common reasons that code developed for one research project cannot be successfully executed or extended by subsequent researchers. I review current approaches to these issues, including virtual machines and workflow systems, and their limitations. I then examine how the popular emerging technology Docker combines several areas from systems research - such as operating system virtualization, cross-platform portability, modular re-usable elements, versioning, and a `DevOps' philosophy, to address these challenges. I illustrate this with several examples of Docker use with a focus on the R statistical environment.},
	number = {1},
	urldate = {2017-06-11TZ},
	journal = {ACM SIGOPS Operating Systems Review},
	author = {Boettiger, Carl},
	month = jan,
	year = {2015},
	note = {arXiv: 1410.0846},
	keywords = {Computer Science - Software Engineering},
	pages = {71--79}
}

@misc{noauthor_kelseyhightower/confd:_nodate,
	title = {kelseyhightower/confd: {Manage} local application configuration files using templates and data from etcd or consul},
	url = {https://github.com/kelseyhightower/confd},
	urldate = {2016-12-21TZ},
	note = {02 Maret 2017}
}

@misc{noauthor_redis_nodate,
	title = {Redis},
	url = {https://redis.io/},
	urldate = {2017-06-11TZ},
	note = {10 April 2017}
}

@misc{bab2-docker,
	title = {What is {Docker}?},
	url = {https://www.docker.com/what-docker},
	urldate = {2016-12-21TZ},
	year = {2016},
	note = {29 Mei 2018}
}

@inproceedings{kvet_experimental_2016,
	title = {Experimental comparison of syntax and semantics of {DBS} {Oracle} and {MySQL}},
	doi = {10.23919/FRUCT.2016.7892192},
	abstract = {Current information systems must deal with complex data management with regards on evolution over the time. There are several database systems with different data modelling principles, data handling and management, however concept of relational database is still most popular. The aim of this paper is to analyze and experimentally compare database systems Oracle and MySQL emphasizing the differences in syntax, semantics and performance characteristics. It consists of analysis of existing database systems, comparison of syntactic and semantic differences with regards on developed application functionality to transform commands to another system. Experimental part compares time consumption based on several characteristics.},
	booktitle = {2016 19th {Conference} of {Open} {Innovations} {Association} ({FRUCT})},
	author = {Kvet, M. and FidesovÃ¡, L. and MatiaÅ¡ko, K.},
	month = nov,
	year = {2016},
	keywords = {Benchmark testing, DBS Oracle, Data models, Database systems, MySQL, SQL, Satellite broadcasting, Semantics, Syntactics, complex data management, data modelling principles, relational database, relational databases, storage management},
	pages = {128--137}
}

@inproceedings{bab2-nginx,
	title = {Web {Load} {Balance} and {Cache} {Optimization} {Design} {Based} {Nginx} under {High}-{Concurrency} {Environment}},
	doi = {10.1109/ICDMA.2012.241},
	abstract = {Load balancing technology and Web cache technology have high priory to solve the problem of network congestion and server overload and to ensure the supply of uninterrupted, high quality services. As a rising star of server software, Nginx is famous for its high concurrent processing capability, while its performance and scalability are excellent. The load balancing and web cache solution in some typical cases were studied in this paper, and focus on how to design solutions combined with the Nginx and its modules. A virtual Discuz BBS application server cluster environment is designed according to the topology in real network, together with a set of corresponding load balancing and Web caching optimization solution are designed and simulated. Through the analysis of the simulation result, we find that the solution based on Nginx is very significant. It proves that solutions based on Nginx for load balance and Web cache are not only feasible, but also very suitable and efficient for deployment in high concurrent environment.},
	booktitle = {2012 {Third} {International} {Conference} on {Digital} {Manufacturing} {Automation}},
	author = {Chi, X. and Liu, B. and Niu, Q. and Wu, Q.},
	month = jul,
	year = {2012},
	keywords = {Dynamic scheduling, IP networks, Internet, Load Balancing, Load management, NGINX, Optimization, Web Cache, Web cache solution, Web load balance, Web servers, cache optimization design based Nginx, cache storage, file servers, high concurrent processing capability, high quality services, high-concurrency environment, network congestion, network topology, resource allocation, rising star, server overload, server software, virtual Discuz BBS application server cluster environment, workstation clusters},
	pages = {1029--1032}
}

@inproceedings{vujovic_usage_2015,
	title = {{USAGE} {OF} {NGINX} and websocket in {IoT}},
	doi = {10.1109/â„¡FOR.2015.7377467},
	abstract = {The use of standard HTTP protocol, within complex systems, may lead to system-wide high latency. The increased number of periodically sent request containing information for updating a client's state on the server can cause a system choke. Websocket protocol acts as an upgrade to the HTTP protocol and functions in a two-way duplex regime, thus the number of request is greatly reduced when compared to standard HTTP. This paper evaluates and measures the performance of a client-server configuration that meets the modern security requirements, whilst providing two-way communication and scalability regarding the number of client and server instances.},
	booktitle = {2015 23rd {Telecommunications} {Forum} {Telfor} (â„¡{FOR})},
	author = {VujoviÄ‡, M. and SaviÄ‡, M. and StefanoviÄ‡, D. and Pap, I.},
	month = nov,
	year = {2015},
	keywords = {Buildings, Electronic mail, IP networks, IoT, NGINX, NGINX-i, Protocols, Random access memory, Scalability, Web sites, Websocket, Websocket protocol, computer network security, hypermedia, modern security requirement, standard HTTP protocol, system choke, transport protocols, two-way duplex regime},
	pages = {289--292}
}

@misc{noauthor_firebase_nodate,
	title = {Firebase {\textbar} {App} success made simple},
	url = {https://firebase.google.com/},
	abstract = {Firebase gives you the tools and infrastructure you need to build better apps and grow successful businesses.},
	urldate = {2017-03-26TZ},
	journal = {Firebase}
}

@misc{noauthor_legastero/stanza.io_nodate,
	title = {legastero/stanza.io},
	url = {https://github.com/legastero/stanza.io},
	abstract = {stanza.io - Modern XMPP in the browser, with a JSON API},
	urldate = {2017-03-26TZ},
	journal = {GitHub}
}

@misc{noauthor_progressive_nodate,
	title = {Progressive {Web} {App} {Checklist} {\textbar} {Web}},
	url = {https://developers.google.com/web/progressive-web-apps/checklist},
	abstract = {A checklist which breaks down all the things we think it takes to be a baseline progressive web app, and how to take it a step further with an exemplary progressive web app.},
	urldate = {2017-03-26TZ},
	journal = {Google Developers}
}

@misc{noauthor_performance_nodate,
	title = {Performance {Tools} - {React}},
	url = {https://facebook.github.io/react/docs/perf.html},
	abstract = {A JavaScript library for building user interfaces},
	urldate = {2017-03-26TZ}
}

@misc{noauthor_xmpp_nodate,
	title = {{XMPP} {\textbar} {XMPP} {Servers}},
	url = {https://xmpp.org/software/servers.html},
	urldate = {2017-03-26TZ}
}

@misc{noauthor_javascript_nodate,
	title = {A {JavaScript} library for building user interfaces - {React}},
	url = {https://facebook.github.io/react/},
	abstract = {A JavaScript library for building user interfaces},
	urldate = {2017-03-26TZ}
}

@misc{noauthor_javascript_nodate-1,
	title = {{JavaScript} {Tutorial}},
	url = {https://www.w3schools.com/js/},
	urldate = {2017-03-26TZ}
}

@misc{noauthor_web_nodate,
	title = {The {Web} {App} {Manifest} {\textbar} {Web}},
	url = {https://developers.google.com/web/fundamentals/engage-and-retain/web-app-manifest/},
	abstract = {The web app manifest is a JSON file that gives you the ability to control how your web app or site appears to the user in areas where they would expect to see native apps (for example, a device's home screen), direct what the user can launch, and define its appearance at launch.},
	urldate = {2017-03-26TZ},
	journal = {Google Developers}
}

@misc{noauthor_service_nodate,
	title = {Service {Workers}: an {Introduction} {\textbar} {Web}},
	shorttitle = {Service {Workers}},
	url = {https://developers.google.com/web/fundamentals/getting-started/primers/service-workers},
	abstract = {Rich offline experiences, periodic background syncs, push notifications\&amp;mdash;functionality that would normally require a native application\&amp;mdash;are coming to the web. Service workers provide the technical foundation that all these features rely on.},
	urldate = {2017-03-26TZ},
	journal = {Google Developers}
}

@misc{noauthor_progressive_nodate-1,
	title = {Progressive {Web} {App} {Checklist} {\textbar} {Web}},
	url = {https://developers.google.com/web/progressive-web-apps/checklist},
	abstract = {A checklist which breaks down all the things we think it takes to be a baseline progressive web app, and how to take it a step further with an exemplary progressive web app.},
	urldate = {2017-03-26TZ},
	journal = {Google Developers}
}

@misc{aditya_apa_2015,
	type = {Text},
	title = {Apa {Itu} {React} ? {Dan} {Mengapa} {Menggunakan} {React} ?},
	shorttitle = {Apa {Itu} {React} ?},
	url = {https://tutorkeren.com/artikel/apa-itu-react-dan-mengapa-menggunakan-react.htm},
	abstract = {Tujuan dibangunnya React adalah untuk menyelesaikan satu masalah pokok: membangun aplikasi berskala besar dengan data yang selalu berganti seiring waktu.},
	language = {id},
	urldate = {2017-03-12TZ},
	journal = {Miarana DIY},
	author = {Aditya},
	month = dec,
	year = {2015}
}

@misc{noauthor_memahami_2016,
	title = {Memahami {Apa} {Itu} {Progressive} {Web} {Apps}},
	url = {https://chromplex.com/progressive-web-apps/},
	abstract = {Sebelumnya Progressive Web Apps sudah pernah diperkenalkan Google. Namun Google mengangkatnya kembali pada I/O bulan Mei yang lalu, Progressive Web Apps menarik perhatian banyak developer web, karena Progressive Web Apps (PWA) digadang-gadangkan mampu bersaing dengan aplikasi native.},
	urldate = {2017-03-12TZ},
	journal = {Chromplex},
	month = jul,
	year = {2016}
}

@misc{noauthor_web_nodate-1,
	title = {Web},
	url = {https://developers.google.com/web/progressive-web-apps/},
	urldate = {2017-03-12TZ},
	journal = {Google Developers}
}

@misc{drifty_ionic_nodate,
	title = {Ionic {Framework}},
	url = {https://ionicframework.com/docs/v2/resources/progressive-web-apps/},
	abstract = {The easiest way to build amazing mobile and progressive web apps. 100\% free and open source.},
	urldate = {2017-03-03TZ},
	journal = {Ionic Framework},
	author = {Drifty}
}

@inproceedings{galante_survey_2012,
	title = {A {Survey} on {Cloud} {Computing} {Elasticity}},
	doi = {10.1109/UCC.2012.30},
	abstract = {Elasticity is a key feature in the cloud computing context, and perhaps what distinguishes this computing paradigm of the other ones, such as cluster and grid computing. Considering the importance of elasticity in cloud computing context, the objective of this paper is to present a comprehensive study about the elasticity mechanisms available today. Initially, we propose a classification for elasticity mechanisms, based on the main features found in the analysed commercial and academic solutions. In a second moment, diverse related works are reviewed in order to define the state of the art of elasticity in clouds. We also discuss some of the challenges and open issues associated with the use of elasticity features in cloud computing.},
	booktitle = {2012 {IEEE} {Fifth} {International} {Conference} on {Utility} and {Cloud} {Computing}},
	author = {Galante, G. and Bona, L. C. E. d},
	month = nov,
	year = {2012},
	keywords = {Measurement, Monitoring, Resource management, Servers, Virtual machining, academic solution, cloud computing, cloud computing elasticity, commercial solution, computing paradigm, elasticity, elasticity mechanism classification, pattern classification, survey},
	pages = {263--270}
}

@inproceedings{roy_efficient_2011,
	title = {Efficient {Autoscaling} in the {Cloud} {Using} {Predictive} {Models} for {Workload} {Forecasting}},
	doi = {10.1109/CLOUD.2011.42},
	abstract = {Large-scale component-based enterprise applications that leverage Cloud resources expect Quality of Service(QoS) guarantees in accordance with service level agreements between the customer and service providers. In the context of Cloud computing, auto scaling mechanisms hold the promise of assuring QoS properties to the applications while simultaneously making efficient use of resources and keeping operational costs low for the service providers. Despite the perceived advantages of auto scaling, realizing the full potential of auto scaling is hard due to multiple challenges stemming from the need to precisely estimate resource usage in the face of significant variability in client workload patterns. This paper makes three contributions to overcome the general lack of effective techniques for workload forecasting and optimal resource allocation. First, it discusses the challenges involved in auto scaling in the cloud. Second, it develops a model-predictive algorithm for workload forecasting that is used for resource auto scaling. Finally, empirical results are provided that demonstrate that resources can be allocated and deal located by our algorithm in a way that satisfies both the application QoS while keeping operational costs low.},
	booktitle = {2011 {IEEE} 4th {International} {Conference} on {Cloud} {Computing}},
	author = {Roy, N. and Dubey, A. and Gokhale, A.},
	month = jul,
	year = {2011},
	keywords = {Cost function, Prediction algorithms, Predictive models, Resource management, Throughput, Time factors, Virtual machining, auto scaling mechanisms, autoscaling, client workload patterns, cloud computing, cloud resources, model-predictive algorithm, object-oriented programming, optimal resource allocation, performance models, quality of service, resource allocation, workload forecasting},
	pages = {500--507}
}

@inproceedings{roy_efficient_2011-1,
	title = {Efficient {Autoscaling} in the {Cloud} {Using} {Predictive} {Models} for {Workload} {Forecasting}},
	doi = {10.1109/CLOUD.2011.42},
	abstract = {Large-scale component-based enterprise applications that leverage Cloud resources expect Quality of Service(QoS) guarantees in accordance with service level agreements between the customer and service providers. In the context of Cloud computing, auto scaling mechanisms hold the promise of assuring QoS properties to the applications while simultaneously making efficient use of resources and keeping operational costs low for the service providers. Despite the perceived advantages of auto scaling, realizing the full potential of auto scaling is hard due to multiple challenges stemming from the need to precisely estimate resource usage in the face of significant variability in client workload patterns. This paper makes three contributions to overcome the general lack of effective techniques for workload forecasting and optimal resource allocation. First, it discusses the challenges involved in auto scaling in the cloud. Second, it develops a model-predictive algorithm for workload forecasting that is used for resource auto scaling. Finally, empirical results are provided that demonstrate that resources can be allocated and deal located by our algorithm in a way that satisfies both the application QoS while keeping operational costs low.},
	booktitle = {2011 {IEEE} 4th {International} {Conference} on {Cloud} {Computing}},
	author = {Roy, N. and Dubey, A. and Gokhale, A.},
	month = jul,
	year = {2011},
	keywords = {Cost function, Prediction algorithms, Predictive models, Resource management, Throughput, Time factors, Virtual machining, auto scaling mechanisms, autoscaling, client workload patterns, cloud computing, cloud resources, model-predictive algorithm, object-oriented programming, optimal resource allocation, performance models, quality of service, resource allocation, workload forecasting},
	pages = {500--507}
}

@inproceedings{imai_cost-efficient_2016,
	title = {Cost-{Efficient} {Elastic} {Stream} {Processing} {Using} {Application}-{Agnostic} {Performance} {Prediction}},
	doi = {10.1109/CCGrid.2016.89},
	abstract = {Cloud computing adds great on-demand scalability to stream processing systems with its pay-per-use cost model. However, to promise service level agreements to users while keeping resource allocation cost low is a challenging task due to uncertainties coming from various sources, such as the target application's scalability, future computational demand, and the target cloud infrastructure's performance variability. To deal with these uncertainties, it is essential to create accurate application performance prediction models. In cloud computing, the current state of the art in performance modelling remains application-specific. We propose an application-agnostic performance modeling that is applicable to a wide range of applications. We also propose an extension to probabilistic performance prediction. This paper reports the progress we have made so far.},
	booktitle = {2016 16th {IEEE}/{ACM} {International} {Symposium} on {Cluster}, {Cloud} and {Grid} {Computing} ({CCGrid})},
	author = {Imai, S. and Patterson, S. and Varela, C. A.},
	month = may,
	year = {2016},
	keywords = {Adaptation models, Computational modeling, Predictive models, Probabilistic logic, Resource management, Throughput, application performance prediction models, application-agnostic performance modeling, application-agnostic performance prediction, cloud computing, cloud infrastructure, computational demand, contracts, cost-efficient elastic stream processing, on-demand scalability, pay-per-use cost model, performance prediction, performance variability, probabilistic performance prediction, resource allocation, resource allocation cost, service level agreements, software performance evaluation, stream processing systems, target application scalability},
	pages = {604--607}
}

@article{yin_software_2016,
	title = {Software {Defined} {Elastic} {Optical} {Networks} for {Cloud} {Computing}},
	volume = {PP},
	issn = {0890-8044},
	doi = {10.1109/MNET.2016.1300091NM},
	number = {99},
	journal = {IEEE Network},
	author = {Yin, Y. and Liu, L. and Proietti, R. and Yoo, S. J. B.},
	month = nov,
	year = {2016},
	keywords = {Arrayed waveguide gratings, Optical buffering, Optical fiber networks, Optical switches, Ports (Computers), cloud computing},
	pages = {12--18}
}

@article{luna_probabilistic_2016,
	title = {Probabilistic {Optimization} of {Resource} {Distribution} and {Encryption} for {Data} {Storage} in the {Cloud}},
	volume = {PP},
	issn = {2168-7161},
	doi = {10.1109/TCC.2016.2543728},
	abstract = {In this paper, we develop a decentralized probabilistic method for performance optimization of cloud services. We focus on Infrastructure-as-a-Service where the user is provided with the ability of configuring virtual resources on demand in order to satisfy specific computational requirements. This novel approach is strongly supported by a theoretical framework based on tail probabilities and sample complexity analysis. It allows not only the inclusion of performance metrics for the cloud but the incorporation of security metrics based on cryptographic algorithms for data storage. To the best of the authorsâ€™ knowledge this is the first unified approach to provision performance and security on demand subject to the Service Level Agreement between the client and the cloud service provider. The quality of the service is guaranteed given certain values of accuracy and confidence. We present some experimental results using the Amazon Web Services, Amazon Elastic Compute Cloud service to validate our probabilistic optimization method.},
	number = {99},
	journal = {IEEE Transactions on Cloud Computing},
	author = {Luna, J. and Abdallah, C. T. and Heileman, G. L.},
	year = {2016},
	keywords = {Complexity theory, Heuristic algorithms, IaaS, Measurement, Optimization, Probabilistic logic, Security, cloud computing, cryptography, performance, randomized algorithm},
	pages = {1--1}
}

@inproceedings{kan_docloud:_2016,
	title = {{DoCloud}: {An} elastic cloud platform for {Web} applications based on {Docker}},
	shorttitle = {{DoCloud}},
	doi = {10.1109/ICACT.2016.7423440},
	abstract = {Internet is growing at an alarming rate, and Web applications have permeated every aspect of people's life. Cloud computing provides a powerful computing model that allows users to access resources on-demand and pay as they use. Cloud computing attracts an increasing number of developers to migrate their Web applications to cloud platforms. Cloud platforms should provide elasticity ability to change the amount of resources allocated to a Web application in order to meet the actual varying demands because of the changing workload. In this paper, we design and implement DoCloud which is an elastic cloud platform based on Docker. In DoCloud, we adopt adding or removing Docker containers to change a Web application's resource and we build a hybrid elasticity controller that incorporates proactive model and reactive model for scale out coupled with proactive model for scale in. Our experiments show that DoCloud can dynamically allocate resources to applications within seconds and maintain higher resource utilization in a single container.},
	booktitle = {2016 18th {International} {Conference} on {Advanced} {Communication} {Technology} ({ICACT})},
	author = {Kan, C.},
	month = jan,
	year = {2016},
	keywords = {DoCloud, Docker, Internet, Iron, Web application, Web services, autoscale, cloud computing, elastic cloud platform, elasticity, hybrid controller, hybrid elasticity controller, proactive model, reactive model},
	pages = {478--483}
}

@misc{noauthor_docker_nodate-1,
	title = {Docker {Remote} {API} - {Docker}},
	url = {https://docs.docker.com/engine/reference/api/docker_remote_api/},
	urldate = {2016-12-21TZ}
}

@misc{noauthor_haproxy_nodate,
	title = {{HAProxy} - {The} {Reliable}, {High} {Performance} {TCP}/{HTTP} {Load} {Balancer}},
	url = {http://www.haproxy.org/},
	urldate = {2016-12-21TZ}
}

@misc{center_for_history_and_new_media_zotero_nodate,
	title = {Zotero {Quick} {Start} {Guide}},
	url = {http://zotero.org/support/quick_start_guide},
	author = {{Center for History and New Media}}
}